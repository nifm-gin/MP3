# Dictionary MRI by IRMaGe - Grenoble, 2017 July.
#
#  Important :      only developpers and advanced users can modified this database (the others users can used the file DictionaryMRI_User.yml which is in the same directory)
#
#  YAML validator online :    see http://yaml-online-parser.appspot.com/ , copy all this text (Ctrl-A and Ctrl-C) and paste in the left case (Ctrl-V) of the web page.
#                                           if the Output case don't show red error message, it's ok !
#
# the structure is as follows :
#
#
#dictionaryMRI:
#
#  Label MRI:
#     where'Constructor':
#          file :           'subject' , 'visu_pars' , 'method' , 'acqp' or 'reco' (for Bruker Paravasion 5 , Paravision 6)
#                           'par , xml' (for Philips Achieva PAR 4.2 , Xml)
#                           'Dirfile, DicomDir or ~ (for Dicom)
#                           'niftiheader' or 'json' (for Nifti)
#                           'json' (for BIDS)
#                            
#          keyName :        $'nameparameter'= (for Bruker)
#                           tag without [],(),<> and its elements which are inside (for Philips)
#                           tag (for Dicom)
#                           tag (for Nifti)
#                           tag (for BIDS)
#                            
#          type :           string, float, int
#          format :         "HH:mm:ss dd/MM/yyyy" , "dd/MM/yyyy HH:mm:ss" ,"SSS" (ms) for date, duree,... (Put the parameter in quote "" !)
#          units : (not yet operational)
#                           um , mm , cm , m (for distance)
#                           us , ms , s , mn , h (for time)
#                           degree (for angle)
#                           mHz , Hz , KHz , MHz , GHz (for frequency)         
#    viewer:
#          category :       (category of your choice)
#
#    json:
#          tagJson :        same tag as Dicom if it exists , a tag of your choice otherwise
#          type :           (see before)
#          format :         (see before)
#          units :          (not yet operational)
#
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
dictionaryMRI:

  Acquisition Date:
                  description: {info: "The date the acquisition of data that resulted in this image started"}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqDate=, type: string, format: "yyyy-MM-dd'T'HH:mm:ss','SSSZZZZ or HH:mm:ss dd MMM yyyy", units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Examination date/time ; Examination Date, type: string ; string, format: "yyyy.MM.dd / HH:mm:ss ; yyyy.MM.dd", units: ~}
                  whereDicom:   {file: ~, keyName: Series Date, type: string, format: "yyyyMMdd", units: ~}
                  whereNifti:   {file: json, keyName: AcquisitionDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}
                  whereBids:    {file: json, keyName: AcquisitionDate, type: string, format: ~, units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: AcquisitionDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}

  Acquisition Time:
                  description: {info: "The time the acquisition of data that resulted in this image started"}
                  
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqScanTime=, type: string, format: "HH:mm:ss.SSS or SSS", units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Scan Duration ; Scan Duration, type: string ; float, format: "ss ; ~", units: ~}
                  whereDicom:   {file: ~, keyName: Acquisition Time, type:  string, format: "SSS", units: s}
                  whereNifti:   {file: json, keyName: AcquisitionTime, type: string, format: "HH:mm:ss.SSS", units: ~}
                  whereBids:    {file: json, keyName: AcquisitionTime, type: string, format: ~, units: ~}

                  
                  viewer: {category: Equipment}
                  json:   {tagJson: AcquisitionTime, type: string, format: "HH:mm:ss.SSS", units: ~}
                  
  Angulation Image:
                  description: {info: "Angulation Image (Philips only)"}
  
                  wherePhilips: {file: PAR ; Xml, keyName: image angulation ; Angulation AP (Image_Info), type: float  ; float, format: ~, units: ~} # && Angulation FH && Angulation RL for Xml
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Angulation Midslice:
                  description: {info: "Angulation Midslice (Philips only)"}
                  
                  wherePhilips: {file: PAR ; Xml, keyName: Angulation midslice ; Angulation AP, type: float  ; float, format: ~, units: ~} # && Angulation FH && Angulation RL for Xml
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  B-values effective:
                   description: {info: "Bval for MRtrix and FSL"}
  
                   whereBruker:  {file: method, keyName: $PVM_DwEffBval=, type: int, format: ~, units: ~}
                   wherePhilips: {file: PAR ; Xml, keyName: diffusion_b_factor ; Diffusion B Factor, type: float  ; float, format: ~, units: ~}
                   whereDicom:   {file: ~, keyName: "2001,1003", type: float, format: ~, units: ~}
                   whereBids:    {file: json, keyName: DiffusionBFactor, type: string, format: ~, units: ~}
                   
                   viewer: {category: Diffusion}
                   json:   {tagJson: ~, type: ~, format: ~, units: ~}

  BandWidth:
                  description: {info: ""}

                  whereBruker:  {file: acqp, keyName: $SW_h=, type: float, format: ~, units: MHz}
                  whereNifti:   {file: json, keyName: BandWidth, type: float, format: ~, units: MHz}
                  whereBids:   {file: json, keyName: BandWidth, type: float, format: ~, units: MHz}                  
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: BandWidth, type: float, format: ~, units: MHz}

  Byte Order:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreByteOrder=, type: string, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Endianness, type: string, format: ~, units: ~}                  
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ByteOrder, type: string, format: ~, units: ~}

  Coil:
                  description: {info: ""}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_operation_mode=, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: Coil, type: string, format: ~, units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Columns:
                  description: {info: ""}
  
                  whereDicom:   {file: dirfile,dicomdir, keyName: Columns, type: int, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Creation Date:
                  description: {info: ""}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_date=, type: string, format: "yyyy-MM-dd'T'HH:mm:ss','SSSZZZZ or HH:mm:ss dd MMM yyyy", units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Examination date/time ; Examination Date, type: string ; string, format: "yyyy.MM.dd / hHH:mm:ss ; yyyy.MM.dd", units: ~}
                  whereDicom:   {file: ~, keyName: Study Date, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: CreationDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}

                  viewer: {category: Equipment}
                  json:   {tagJson: CreationDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}         

  Data Type:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreWordType=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image pixel size ; Pixel Size, type: string ; int, format: ~, units: ~}
                  whereDicom:   {file: dirfile,dicomdir, keyName: Bits Allocated, type: string, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Datatype, type: string, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Diffusion Ao Images number:
                  description: {info: ""}
                    
                  whereBruker:  {file: method, keyName: $PVM_DwAoImages=, type: int, format: ~, units: ~}

                  viewer: {category: Diffusion}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Direction Diffusion:
                  description: {info: "Bvec for MRtrix and FSL"}
                    
                  whereBruker:  {file: method, keyName: $PVM_DwDir=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: diffusion ; Diffusion AP, type: float  ; float, format: ~, units: ~} # && Diffusion FH && Diffusion RL for Xml
                  whereDicom:   {file: ~, keyName: "2005,10B0", type: float, format: ~, units: ~}

                  viewer: {category: Diffusion}
                  json:   {tagJson: DirectionDiffusion, type: float, format: ~, units: ~}

  Echo Time:
                  description: {info: "Time in ms between the middle of the excitation pulse and the peak of the echo produced "}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_echo_time=, type: float, format: ~, units: ms}
                  wherePhilips: {file: PAR ; Xml, keyName: echo_time ; Echo Time, type: float  ; float, format: ~, units: ms   ; ms}
                  whereDicom:   {file: dirfile, keyName: Echo Time, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: EchoTime, type: float, format: ~, units: ms}
                  whereBids:   {file: json, keyName: EchoTime, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: EchoTime, type: float, format: ~, units: ms}

  Flip Angle:
                  description: {info: "Steady state angle in degrees to which the magnetic vector is flipped from the magnetic vector of the primary field"}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_flip_angle=, type: float, format: ~, units: degree}
                  wherePhilips: {file: PAR ; Xml, keyName: image_flip_angle ; Image Flip Angle, type: float  ; float, format: ~, units: ~ ; degree}
                  whereDicom:   {file: dirfile, keyName: Flip Angle, type: float, format: ~, units: degree}
                  whereNifti:   {file: json, keyName: FlipAngle, type: float, format: ~, units: degree}
                  whereBids:   {file: json, keyName: FlipAngle, type: float, format: ~, units: degree}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: FlipAngle, type: float, format: ~, units: degree}

  FOV:
                  description: {info: ""}
  
                  whereBruker:  {file: reco, keyName: $RECO_fov=, type: float, format: ~, units: mm}
                  wherePhilips: {file: PAR ; Xml, keyName: FOV  ; FOV AP , type: float  ; float, format: ~, units: ~ ; degree} # && FOV FH && FOV RL
                  whereNifti:   {file: json, keyName: FOV, type: float, format: ~, units: mm}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: FOV, type: float, format: ~, units: mm}
                  
  Gradient Orientation Number:
                  description: {info: ""}
                  
                  whereDicom: {file: ~, keyName: "2005,1413", type: int, format: ~, units: ~}
                  
                  viewer: {category: Diffusion}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                         
  Images In Acquisition:
                  description: {info: "Number of images that resulted from this acquisition of data"}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreFrameCount=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: index in REC file   ; Index, type: int  ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Number of Frames, type: int, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImageInAcquisition, type: int, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ImageInAcquisition, type: int, format: ~, units: ~}

  Imaged Nucleus:
                  description: {info: "Nucleus that is resonant at the imaging frequency. Examples: 31P, 1H"}
  
                  whereBruker:  {file: acqp, keyName: $NUCLEUS=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Imaged Nucleus, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImagedNucleus, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ImagedNucleus, type: string, format: ~, units: ~}  
                  
  Image Orientation Patient:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreOrientation=, type: float, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image angulation ; Angulation AP , type: float  ; float, format: ~, units: degree ; degree} # && Angulation FH && Angulation RL
                  whereDicom:   {file: dirfile, keyName: Image Orientation (Patient), type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImageOrientationPatient, type: float, format: ~, units: ~}

                  viewer: {category: PositionOrientation}
                  json:   {tagJson: ImageOrientationPatient, type: float, format: ~, units: ~}
  
  Image Position Patient:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCorePosition=, type: float, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image offcentre  ; Offcenter AP, type: float  ; float, format: ~, units: mm   ; ~} # && Offcenter FH && Offcenter RL
                  whereDicom:   {file: dirfile, keyName: Image Position (Patient), type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImagePositionPatient, type: float, format: ~, units: ~}

                  viewer: {category: PositionOrientation}
                  json:   {tagJson: ImagePositionPatient, type: float, format: ~, units: ~}  
  
  Image Type:
                  description: {info: "Image identification characteristics (Magnitude Image, .... )"}
        
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreFrameType=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image_type_mr  ; Type, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, dicomdir, keyName: Image Type, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImageType, type: string, format: ~, units: ~}
                  whereBids:   {file: json, keyName: ImageType, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ImageType, type: string, format: ~, units: ~}  
  
  Imaging Frequency:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqImagingFrequency=, type: float, format: ~, units: MHz}
                  whereDicom:   {file: ~, keyName: Imaging Frequency, type: float, format: ~, units: MHz}
                  whereNifti:   {file: json, keyName: ImagingFrequency, type: float, format: ~, units: MHz}

                  viewer: {category: ~}
                  json:   {tagJson: ImagingFrequency, type: float, format: ~, units: MHz}

  Inversion Time:
                  description: {info: "Time in msec after the middle of inverting RF pulse to middle of excitation pulse to detect the amount of longitudinal magnetization"}
  
                  whereBruker:  {file: visu_pars, keyName: $ACQ_inversion_time=, type: float, format: ~, units: ms}
                  whereDicom:   {file: dirfile, keyName: Inversion Time, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: InversionTime, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: InversionTime, type: float, format: ~, units: ms}

  Label Type (ASL):
                  description: {info: "position of Arterial Spin Labeling "}
  
                  wherePhilips: {file: PAR ; Xml, keyName: label type   ; Label Type, type: int   ; string, format: ~, units: ~}
                  whereDicom: {file: ~, keyName: "2005,1429", type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: LabelType, type: string, format: ~, units: ~}

  Manufacturer:
                  description: {info: "Manufacturer of the equipment that produced the composite instances"}
          
                  whereBruker:  {file: method, keyName: ORIGIN=, type: string, format: ~, units: ms}
                  whereDicom:   {file: ~, keyName: Manufacturer, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: Manufacturer, type: string, format: ~, units: ms}

                  viewer: {category: Equipment}
                  json:   {tagJson: Manufacturer, type: string, format: ~, units: ms}

  Manufacturer's Model:
                  description: {info: "Manufacturer's model name of the equipment that produced the composite instances"}
  
                  whereDicom:   {file: ~, keyName: Manufacturer's Model Name, type: string, format: ~, units: ~}
                   
                  viewer: {category: Equipment}
                  json:   {tagJson: Manufacturer's Model, type: string, format: ~, units: ~}                  

  Modality:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: Modality, type: string, format: ~, units: ~}
                  whereBids:    {file: json, keyName: Modality, type: string, format: ~, units: ~}
                  
                  viewer: {category: Test}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Number Of Averages:
                  description: {info: "Number of times a given pulse sequence is repeated before any parameter is changed"}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqNumberOfAverages=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: number of averages   ; No Averages, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Number of Averages, type: int, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Diffusion:
                  description: {info: ""}
  
                  wherePhilips: {file: PAR ; Xml, keyName: diffusion b value number  ; BValue, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: "0018,9087", type: float, format: ~, units: ~}
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Echo:
                  description: {info: ""}
  
                  whereBruker:  {file: method, keyName: $PVM_NEchoImages=, type: ~, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: echo number  ; Echo, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Echo Time, type: ~, format: ~, units: ~}
                  
                  viewer: {category: Dimensions}
                  
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Repetition:
                  description: {info: ""}
  
                  whereBruker:  {file: method, keyName: $PVM_NRepetitions=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Max. number of dynamics   ; Max No Dynamics, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Temporal Position, type: int, format: ~, units: ~}
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Slice:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCorePosition=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Max. number of slices/locations  ; Max No Slices, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Image Position Patient, type: int, format: ~, units: ~} #Slice Location
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Patient BirthDate:
                  description: {info: "Birth date of the patient"}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_dbirth=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: ~ ; ~ , type: ~ ; ~, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Birth Date, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientBirthDate, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientBirthDate, type: string, format: ~, units: ~}

  Patient ID:
                  description: {info: ""}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_id=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient ID, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientID, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientID, type: string, format: ~, units: ~}

  Patient Name:
                  description: {info: ""}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_name_string=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Patient name   ; Patient Name, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientName, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientName, type: string, format: ~, units: ~}

  Patient Position:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuSubjectPosition=, type: string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Patient Position, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientPosition, type: string, format: ~, units: ~}
                  whereBids:   {file: json, keyName: PatientPosition, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: PatientPosition, type: string, format: ~, units: ~}

  Patient Sex:
                  description: {info: "Sex of the named patient"}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_sex=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: ~ ; ~ , type: ~ ; ~, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Sex, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientSex, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientSex, type: string, format: ~, units: ~}

  Patient Weight:
                  description: {info: ""}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_weight=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: ~ ; ~ , type: ~ ; ~, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Weight, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientWeight, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientWeight, type: string, format: ~, units: ~}

  Pixel Bandwidth:
                  description: {info: "Reciprocal of the total sampling period, in hertz per pixel"}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqPixelBandwidth=, type: float, format: ~, units: ms}
                  whereDicom:   {file: ~, keyName: Pixel Bandwidth, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: PixelBandwidth, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: PixelBandwidth, type: float, format: ~, units: Hz/pixel}

  Pixel Representation:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: Pixel Representation, type: int, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: Pixel Representation, type: int, format: ~, units: ~}

  Pixel Spacing:
                  description: {info: ""}
  
                  whereBruker:  {file: method, keyName: $PVM_SpatResol=, type: int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Pixel Spacing, type: int, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Position Image:              
                  description: {info: ""}
  
                  wherePhilips: {file: PAR ; Xml, keyName: image offcentre  ; Offcenter AP, type: float  ; float, format: ~, units: ~} # && Off Center FH && Off Center RL, type: float  ; float, format: ~, units: ~}
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
         
  Position Midslice:              
                  description: {info: ""}
  
                  wherePhilips: {file: PAR ; Xml, keyName: Off Centre midslice ; Off Center AP , type: float  ; float, format: ~, units: ~} # && Off Center FH && Off Center RL
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Protocol:
                  description: {info: ""}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_protocol_name=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Protocol name  ; Protocol Name, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Protocol Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ProtocolName, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ProtocolName, type: string, format: ~, units: ~}
          
  Read Direction:
                  description: {info: ""}
  
                  whereBruker:  {file: method, keyName: $PVM_SPackArrReadOrient=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Acquisition Matrix, type: string, format: ~, units: ~} #Multi-valued: frequency rows\frequency columns\phase rows\phase columns.
                  whereNifti:   {file: json, keyName: ReadDirection, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ReadDirection, type: string, format: ~, units: ~}
                  
  Real Value Slope:
                  description: {info: ""}
                  
                  whereDicom:   {file: ~, keyName: Real World Value Slope, type: string, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Real Value Intercept:
                  description: {info: ""}
                  
                  whereDicom:   {file: ~, keyName: Real World Value Intercept, type: string, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Repetition Time:
                  description: {info: "The period of time in msec between the beginning of a pulse sequence and the beginning of the succeeding pulse sequence"}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_repetition_time=, type: float, format: ~, units: ms}
                  wherePhilips: {file: PAR ; Xml, keyName: Repetition time  ; Repetition Times, type: float  ; float, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Repetition Time, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: RepetitionTime, type: float, format: ~, units: ms}
                  whereBids:   {file: json, keyName: RepetitionTime, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: RepetitionTime, type: float, format: ~, units: ms}

  Rows:
                  description: {info: ""}
  
                  whereDicom:   {file: dirfile,dicomdir, keyName: Rows, type: int, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
                  
  Rescale Intercept:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: Rescale Intercept, type: string, format: ~, units: ~}
                  #wherePhilips: {file: PAR ; Xml, keyName: rescale intercept ; Rescale Intercept, type: float ; double, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Rescale Slope:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: Rescale Slope, type: string, format: ~, units: ~}
                  #wherePhilips: {file: PAR ; Xml, keyName: rescale slope ; Rescale Slope, type: float ; double, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Scale Slope:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: "2005,100E", type: string, format: ~, units: ~}
                  #wherePhilips: {file: PAR ; Xml, keyName: scale slope ; Scale Slope, type: float ; float, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Scaling slope and intercept:
                  description: {info: ""}
  
                  whereNifti:   {file: niftiheader, keyName: Scaling slope and intercept, type: string, format: ~, units: ~}               
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}  

  Scan Mode:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreDim=, type: float, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Scan mode ; Scan Mode, type: string ; string, format: ~, units: ms}
                  whereDicom:   {file: ~, keyName: MR Acquisition Type, type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ScanMode, type: string, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ScanMode, type: string, format: ~, units: ~}

  Scan Resolution:
                  description: {info: ""}
  
                  whereBruker:  {file: reco, keyName: $RECO_size=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: recon resolution ; Resolution X , type: int  ; int, format: ~, units: ~} # && Resolution Y
                  whereDicom:   {file: ~, keyName: Rows & Columns, type: int, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Dataset dimensions, type: int, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Scanning Sequence:
                  description: {info: "Description of the type of data taken(Spin Echo, Inversion Recovery,..."}
  
                  wherePhilips: {file: PAR ; Xml, keyName: scanning sequence ; Sequence, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Scanning Sequence, type: string, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~} 
 
  Sequence Name:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqSequenceName=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Technique ; Technique, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Series Description, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: SequenceName, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: SequenceName, type: string, format: ~, units: ~}

  Session:
                  description: {info: ""}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_operator=, type: string, format: ~, units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: Session, type: string, format: ~, units: ~}
                  
  Slice Gap:
                  description: {info: ""}
  
                  wherePhilips: {file: PAR ; Xml, keyName: slice gap ; Slice Gap, type: float ; float, format: ~, units: mm}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceThickness, type: float, format: ~, units: mm}

  Slice Orientation:
                  description: {info: ""}
  
                  whereBruker:  {file: method, keyName: $PVM_SPackArrSliceOrient=, type: string, format: ~, units: ~}
                  wherePhilips:  {file: PAR ; Xml, keyName: slice orientation ; Slice Orientation, type: string ; string, format: ~, units: ~}
                  whereDicom:  {file: dirfile, keyName: Image Orientation (Patient), type: string, format: ~, units: ~}                 
                  whereNifti:   {file: json, keyName: SliceOrientation, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceOrientation, type: string, format: ~, units: ~}

  Slice Position:
                  description: {info: ""}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCorePosition=, type: string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Slice Location, type: string, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
          
  Slice Separation:
                  description: {info: ""}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_slice_sepn=, type: float, format: ~, units: mm}
                  whereDicom:   {file: ~, keyName: Spacing Between Slices, type: float, format: ~, units: mm}
                  whereNifti:   {file: json, keyName: SpacingBetweenSlices, type: float, format: ~, units: mm}
                  whereBids:   {file: json, keyName: SpacingBetweenSlices, type: float, format: ~, units: mm}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: SpacingBetweenSlices, type: float, format: ~, units: mm}

  Slice Thickness:
                  description: {info: ""}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_slice_thick=, type: float, format: ~, units: mm}
                  wherePhilips: {file: PAR ; Xml, keyName: slice thickness ; Slice Thickness, type: float ; float, format: ~, units: mm}
                  whereDicom:   {file: ~, keyName: Slice Thickness, type: float, format: ~, units: mm}
                  whereNifti:   {file: json, keyName: SliceThickness, type: float, format: ~, units: mm}
                  whereBids:   {file: json, keyName: SliceThickness, type: float, format: ~, units: mm}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceThickness, type: float, format: ~, units: mm}

  Software Version:
                  description: {info: "Manufacturer's designation of software version of the equipment that produced the composite instances"}
  
                  whereBruker:  {file: visu_pars, keyName: $VisuCreatorVersion=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Software Versions(s), type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: SoftwareVersions, type: string, format: ~, units: ~}

                  viewer: {category: Equipment}
                  json:   {tagJson: SoftwareVersions, type: string, format: ~, units: ~}

  Spatial Resolution:
                  description: {info: "The inherent limiting resolution in mm of the acquisition equipment for high contrast objects for the data gathering and reconstruction technique chosen. If variable across the images of the series, the value at the image center"}
  
                  whereBruker:  {file: method, keyName: $PVM_SpatResol=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: pixel spacing  ; Pixel Spacing, type: float ; float, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Pixel Spacing, type: float, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Grid spacings, type: int, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Spin Echo Time:
                  description: {info: ""}
                  
                  whereBruker:  {file: method, keyName: $SpinEchoTime= (or) $PVM_EchoTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SpinEchoTime, type: float, format: ~, units: ms} 

  Station Name:
                  description: {info: ""}
  
                  whereBruker:  {file: acqp, keyName: $ACQ_station=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Station Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: StationName, type: string, format: ~, units: ~}
                  whereBids:   {file: json, keyName: StationName, type: string, format: ~, units: ~}

                  viewer: {category: Equipment}
                  json:   {tagJson: StationName, type: string, format: ~, units: ~}

  Study Name:
                  description: {info: ""}
  
                  whereBruker:  {file: subject, keyName: $SUBJECT_study_name=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Examination name ; Examination Name, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Study ID, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: StudyName, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: StudyName, type: string, format: ~, units: ~}
                  
                  
  Study Date:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: Study Date, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                 
  Study Time:
                  description: {info: ""}
  
                  whereDicom:   {file: ~, keyName: Study Time, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}