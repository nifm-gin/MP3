# Dictionary MRI by IRMaGe - Grenoble, 2017 July.
#
#
#
#  YAML validator online :    see http://yaml-online-parser.appspot.com/ , copy all this text (Ctrl-A and Ctrl-C) and paste in the left case (Ctrl-V) of the web page.
#                                           if the Output case don't show red error message, it's ok !
#
# the structure is as follows :
#
#
#dictionaryMRI:
#
#  Label MRI:
#     where'Constructor':
#          file :           'subject' , 'visu_pars' , 'method' , 'acqp' or 'reco' (for Bruker Paravasion 5 , Paravision 6)
#                           'par , xml' (for Philips Achieva PAR 4.2 , Xml)
#                           'Dirfile, DicomDir or ~ (for Dicom)
#                           'niftiheader' or 'json' (for Nifti)
#                            
#          keyName :        $'nameparameter'= (for Bruker)
#                           tag without [],(),<> and its elements which are inside (for Philips)
#                           tag (for Dicom)
#                           tag (for Nifti)
#                            
#          type :           string, float, int
#          format :         "HH:mm:ss dd/MM/yyyy" , "dd/MM/yyyy HH:mm:ss" ,"SSS" (ms) for date, duree,... (Put the parameter in quote "" !)
#          units : (not yet operational)
#                           um , mm , cm , m (for distance)
#                           us , ms , s , mn , h (for time)
#                           degree (for angle)
#                           mHz , Hz , KHz , MHz , GHz (for frequency)         
#    viewer:
#          category :       (category of your choice)
#
#    json:
#          tagJson :        same tag as Dicom if it exists , a tag of your choice otherwise
#          type :           (see before)
#          format :         (see before)
#          units :          (not yet operational)
#
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
dictionaryMRI:

  ACQ_grad_matrix:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $ACQ_grad_matrix=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_grad_matrix, type: string, format: ~, units: ~}  

  ACQ_fov:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $ACQ_fov=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_fov, type: string, format: ~, units: ~}
  
  ACQ_slice_sepn:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $ACQ_slice_sepn=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_slice_sepn, type: string, format: ~, units: ~}

  ACQ_NSLICES:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $NSLICES=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_NSLICES, type: string, format: ~, units: ~}

  ACQ_slice_thick:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $ACQ_slice_thick=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_slice_thick, type: string, format: ~, units: ~}

  ACQ_slice_sepn_mode:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $ACQ_slice_sepn_mode=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_slice_sepn_mode, type: string, format: ~, units: ~}

  ACQ_NI:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $NI=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_NI, type: string, format: ~, units: ~}

  ACQ_obj_order:
                   description: {info: ""}
  
                   whereBruker:  {file: acqp, keyName: $ACQ_obj_order=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: ACQ_obj_order, type: string, format: ~, units: ~}

  PVM_SPackArrReadOffset:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_SPackArrReadOffset=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: PVM_SPackArrReadOffset, type: string, format: ~, units: ~}

  PVM_SPackArrPhase1Offset:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_SPackArrPhase1Offset=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: PVM_SPackArrPhase1Offset, type: string, format: ~, units: ~}
 
  PVM_SPackArrSliceOffset:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_SPackArrSliceOffset=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: PVM_SPackArrSliceOffset, type: string, format: ~, units: ~}

  PVM_SPackArrGradOrient:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_SPackArrGradOrient=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: PVM_SPackArrGradOrient, type: string, format: ~, units: ~}

  PVM_SliceGeo:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_SliceGeo=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: PVM_SliceGeo, type: string, format: ~, units: ~}

  PVM_SPackArrSliceOrient:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_SPackArrSliceOrient=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: PVM_SPackArrSliceOrient, type: string, format: ~, units: ~}

  RECO_offset:
                   description: {info: ""}
  
                   whereBruker:  {file: reco, keyName: $RECO_offset=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: RECO_offset, type: string, format: ~, units: ~}

  RECO_ft_size:
                   description: {info: ""}
  
                   whereBruker:  {file: reco, keyName: $RECO_ft_size=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: RECO_ft_size, type: string, format: ~, units: ~}

  RECO_size:
                   description: {info: ""}
  
                   whereBruker:  {file: reco, keyName: $RECO_size=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: RECO_size, type: string, format: ~, units: ~}

  RECO_fov:
                   description: {info: ""}
  
                   whereBruker:  {file: reco, keyName: $RECO_fov=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: RECO_fov, type: string, format: ~, units: ~}
  
  RECO_transposition:
                   description: {info: ""}
  
                   whereBruker:  {file: reco, keyName: $RECO_transposition=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: RECO_transposition, type: string, format: ~, units: ~}

  VisuCoreFrameCount:
                   description: {info: ""}
  
                   whereBruker:  {file: visu_pars, keyName: $VisuCoreFrameCount=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: VisuCoreFrameCount, type: string, format: ~, units: ~}

  VisuCoreOrientation:
                   description: {info: ""}
  
                   whereBruker:  {file: visu_pars, keyName: $VisuCoreOrientation=, type: int, format: ~, units: ~}
                   
                   viewer: {category: cineASL}
                   json:   {tagJson: VisuCoreOrientation, type: string, format: ~, units: ~}


  B-values Number:
                   description: {info: ""}
  
                   whereBruker:  {file: method, keyName: $PVM_DwNDiffExpEach=, type: int, format: ~, units: ~}
                   
                   viewer: {category: Diffusion}
                   json:   {tagJson: ~, type: ~, format: ~, units: ~}
            
  
  Coding Scheme Designator:
                   description: {info: ""}
  
                   whereDicom:  {file: ~, keyName: Coding Scheme Designator, type: string, format: ~, units: ~}
                   
                   viewer: {category: Specification}
                   json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Diffusion Preparation Method:
                  description: {info: ""}
  
                  whereBruker:  {file: method, keyName: $PVM_DiffPrepMode=, type: string, format: ~, units: ~}
                  whereNifti:    {file: json, keyName: DiffusionPreparationMethod, type: string, format: ~, units: ~}
                  
                  viewer: {category: Diffusion}
                  json:   {tagJson: DiffusionPreparationMethod, type: string, format: ~, units: ~}

  Diffusion AP_FH_RL:
                  description: {info: ""}
  
                  wherePhilips:  {file: PAR ; Xml, keyName: diffusion ; Diffusion AP, type: ~ ; ~, format: ~, units: ~}          
                  
                  viewer: {category: Diffusion} 
                  json:   {tag_Json: ~, type: ~, format: ~, units: ~}
  
  Direction Diffusion Number:
                  description: {info: ""}
                    
                  whereBruker:  {file: method, keyName: $PVM_DwNDiffDir=, type: int, format: ~, units: ~}
                  whereNifti:    {file: json, keyName: DirectionDiffusionNumber, type: int, format: ~, units: ~}

                  viewer: {category: Diffusion}
                  json:   {tagJson: DirectionDiffusionNumber, type: int, format: ~, units: ~}

  Method Diffusion:
                  description: {info: ""}
                    
                  whereBruker:  {file: method, keyName: $Method=, type: string, format: ~, units: ~}
                  whereNifti:    {file: json, keyName: MethodDiffusion, type: string, format: ~, units: ~}
                  
                  viewer: {category: Diffusion}
                  json:   {tagJson: MethodDiffusion, type: string, format: ~, units: ~}

  PCasl Phi:
                  description: {info: ""}
                  
                  whereBruker:  {file: method, keyName: $PCASL_PhiSwList=, type: string, format: ~, units: ~}
                  
                  viewer: {category: PCasl}
                  json:   {tagJson: PCaslPhi, type: string, format: ~, units: ~}

  PCasl Label:
                  description: {info: ""}
                  
                  whereBruker:  {file: method, keyName: $PCASL_LabelImages=, type: string, format: ~, units: ~}
                  
                  viewer: {category: PCasl}
                  json:   {tagJson: PCaslLabel, type: string, format: ~, units: ~}
                  
  Segment EPI:
                  description: {info: ""}
                  
                  whereBruker:  {file: method, keyName: $NSegments=, type: int, format: ~, units: ~}
                  whereNifti:    {file: json, keyName: SegmentEPI, type: int, format: ~, units: ~}

                  viewer: {category: Diffusion}
                  json:   {tagJson: SegmentEPI, type: int, format: ~, units: ~}
  
  Specific Character:
                  description: {info: ""}
                  whereDicom:  {file: ~, keyName: Specific Character Set, type: string, format: ~, units: ~}
                   
                  viewer: {category: Specification}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Transposition:
                  description: {info: ""}
                  whereBruker:  {file: reco, keyName: $RECO_transposition=, type: string, format: ~, units: ~}
                   
                  viewer: {category: Grad Orient}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Gradient Orientation:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_SPackArrGradOrient=, type: string, format: ~, units: ~}
                   
                  viewer: {category: Grad Orient}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Gradient Matrix:
                  description: {info: ""}
                  whereBruker:  {file: acqp, keyName: $ACQ_grad_matrix=, type: string, format: ~, units: ~}
                   
                  viewer: {category: Grad Orient}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}    

  PostLabelTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: ASL_PostLabelTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: PostLabelTime, type: float, format: ~, units: ms}  

  LabelTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: ASL_LabelTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: LabelTime, type: float, format: ~, units: ms}  

  SpatDimEnum:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_SpatDimEnum=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SpatDimEnum, type: string, format: ~, units: ~}  

  ObjOrderList:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_ObjOrderList=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ObjOrderList, type: float, format: ~, units: ms}   

  RepetitionTimePVM:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_RepetitionTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: RepetitionTimePVM, type: float, format: ~, units: ms}    

  MagTransOnOff:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_MagTransOnOff=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: MagTransOnOff, type: string, format: ~, units: ~}         

  FovSatOnOff:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_FovSatOnOff=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FovSatOnOff, type: string, format: ~, units: ~}  

  FatSupOnOff:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_FatSupOnOff=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FatSupOnOff, type: string, format: ~, units: ~}  

  TriggerModule:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerModule=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerModule, type: string, format: ~, units: ~}  

  TriggerOutOnOff:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerOutOnOff=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerOutOnOff, type: string, format: ~, units: ~} 

  MagTransModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_MagTransModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: MagTransModuleTime, type: float, format: ~, units: ms} 

  FovSatModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_FovSatModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FovSatModuleTime, type: float, format: ~, units: ms} 

  FatSupModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_FatSupModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FatSupModuleTime, type: float, format: ~, units: ms} 

  RephaseTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $RephaseTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: RephaseTime, type: float, format: ~, units: ms} 

  SignalType:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_SignalType=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SignalType, type: string, format: ~, units: ~} 

  SPackArrNSlices:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_SPackArrNSlices=( 1 ), type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SPackArrNSlices, type: float, format: ~, units: ~} 

  EpiModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_EpiModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: EpiModuleTime, type: float, format: ~, units: ms} 

  EpiEchoDelay:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_EpiEchoDelay=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: EpiEchoDelay, type: float, format: ~, units: ms} 

  TaggingModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TaggingModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TaggingModuleTime, type: float, format: ~, units: ms} 

  ASL_ModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: ASL_ModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ASL_ModuleTime, type: float, format: ~, units: ms} 

  PackDel:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PackDel=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: PackDel, type: float, format: ~, units: ~} 

  SliceSpoiler:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $SliceSpoiler=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceSpoiler, type: string, format: ~, units: ~} 

  ExcPul:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $ExcPul=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ExcPul, type: string, format: ~, units: ~} 

  RefPul:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $RefPul=(, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: RefPul, type: string, format: ~, units: ~} 

  TriggerMode:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerMode=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerMode, type: string, format: ~, units: ~} 

  TriggerDelay:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerDelay=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerDelay, type: float, format: ~, units: ~} 

  TrigD0:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TrigD0=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TrigD0, type: float, format: ~, units: ~} 

  TrigOutD0:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TrigOutD0=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TrigOutD0, type: float, format: ~, units: ~} 

  TriggerOutModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerOutModuleTime=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerOutModuleTime, type: float, format: ~, units: ms}

  TriggerOutMode:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerOutMode=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerOutMode, type: string, format: ~, units: ~}

  SliceSpoilerDuration:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $SliceSpoilerDuration=, type: float, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceSpoilerDuration, type: float, format: ~, units: ms}

  ExcPulse:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $ExcPulse=(, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ExcPulse, type: string, format: ~, units: ~}

  RefPulse:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $RefPulse=(, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: RefPulse, type: string, format: ~, units: ~}

  FairModePVM:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_FairMode=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FairModePVM, type: string, format: ~, units: ~}

  FairMode:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $FairMode=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FairMode, type: string, format: ~, units: ~}

  FairTIRArrPVM:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_FairTIR_Arr=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FairTIRArrPVM, type: float, format: ~, units: ~}

  FairTIRArr:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $FairTIR_Arr=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: FairTIRArr, type: float, format: ~, units: ~}

  InvTimeSel:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $InvTimeSel=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: InvTimeSel, type: float, format: ~, units: ~}

  InvTimeGlob:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $InvTimeGlob=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: InvTimeGlob, type: float, format: ~, units: ~}

  ExcPulseAngle:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_ExcPulseAngle=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ExcPulseAngle, type: float, format: ~, units: ~}

  SegTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $Seg_time=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SegTime, type: float, format: ~, units: ~}

  ExSliceRephaseTime_PVM:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_ExSliceRephaseTime=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ExSliceRephaseTime_PVM, type: float, format: ~, units: ~}

  ExSliceRephaseTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $ExSliceRephaseTime=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ExSliceRephaseTime, type: float, format: ~, units: ~}

  ppgFlag1:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_ppgFlag1=, type: string, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ppgFlag1, type: string, format: ~, units: ~}

  MinEchoTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_MinEchoTime=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: MinEchoTime, type: float, format: ~, units: ~}

  RefPulse1:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $RefPulse1=(, type: string, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: RefPulse1, type: string, format: ~, units: ms}

  ExcPulse1:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $ExcPulse1=(, type: string, format: ~, units: ms}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ExcPulse1, type: string, format: ~, units: ms}

  TrigD0:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TrigD0=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TrigD0, type: float, format: ~, units: ~}

  TriggerModuleTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_TriggerModuleTime=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: TriggerModuleTime, type: float, format: ~, units: ~}

  ScanTime:
                  description: {info: ""}
                  whereBruker:  {file: method, keyName: $PVM_ScanTime=, type: float, format: ~, units: ~}
                   
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ScanTime, type: float, format: ~, units: ~}              
             
